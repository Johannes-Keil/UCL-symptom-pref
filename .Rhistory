mutate(sig = ifelse(p < .05 / 52, 1, 0))
res
plot_test_retest <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci)) +
geom_hline(aes(yintercept = 0))
plot_test_retest
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci)) +
geom_hline(aes(yintercept = 0))
plot_trt
mean_cor = res$cor %>% mean()
mean_cor
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci)) +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
theme_bw()
plot_trt
# any item for which there was no significant relationship?
# after correcting for multiple comparisons.
res <- res %>%
mutate(
sig = ifelse(p < .05 / 52, "Yes", "No") %>% as.factor(),
corrected_p = p * 52
)
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci)) +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
theme_bw()
plot_trt
rank_data <- wins_participant_wave %>%
group_by(participant, wave) %>%
mutate(
rank = dense_rank(desc(wins))
) %>%
dplyr::select(
participant, wave, item, rank
) %>%
pivot_wider(
names_from = wave,
names_prefix = "wave_",
values_from = rank
)
res = matrix(nrow = 0, ncol = 6) %>% as.data.frame()
colnames(res) = c("item", "cor","df", "p", "lower_ci", "upper_ci")
for (i in 1:52){
a = rank_data %>% filter(item == paste("i", i, sep = ""))
r = cor.test(a$wave_1, a$wave_2)
res <- res %>%
add_row(
item = i,
df = r$parameter,
cor = r$estimate,
p = r$p.value,
lower_ci = r$conf.int[1],
upper_ci = r$conf.int[2]
)
}
# look at results
# mean test-retest reliability
mean_cor = res$cor %>% mean()
res$cor %>% sd()
# any item for which there was no significant relationship?
# after correcting for multiple comparisons.
res <- res %>%
mutate(
sig = ifelse(p < .05 / 52, "Yes", "No") %>% as.factor(),
corrected_p = p * 52
)
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci)) +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after Bonferroni-Correction")
theme_bw()
plot_trt
plot_trt
rank_data <- wins_participant_wave %>%
group_by(participant, wave) %>%
mutate(
rank = dense_rank(desc(wins))
) %>%
dplyr::select(
participant, wave, item, rank
) %>%
pivot_wider(
names_from = wave,
names_prefix = "wave_",
values_from = rank
)
res = matrix(nrow = 0, ncol = 6) %>% as.data.frame()
colnames(res) = c("item", "cor","df", "p", "lower_ci", "upper_ci")
for (i in 1:52){
a = rank_data %>% filter(item == paste("i", i, sep = ""))
r = cor.test(a$wave_1, a$wave_2)
res <- res %>%
add_row(
item = i,
df = r$parameter,
cor = r$estimate,
p = r$p.value,
lower_ci = r$conf.int[1],
upper_ci = r$conf.int[2]
)
}
# look at results
# mean test-retest reliability
mean_cor = res$cor %>% mean()
res$cor %>% sd()
# any item for which there was no significant relationship?
# after correcting for multiple comparisons.
res <- res %>%
mutate(
sig = ifelse(p < .05 / 52, "Yes", "No") %>% as.factor(),
corrected_p = p * 52
)
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci)) +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Cor.")
theme_bw()
plot_trt
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "lightgray") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "gray") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
items
item1_list
names
View(res)
sd_cor = res$cor %>% sd()
sd_cor
mean_cor
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = df / 100)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = df / 500)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
res$df
# any item for which there was no significant relationship?
# after correcting for multiple comparisons.
res <- res %>%
mutate(
sig = ifelse(p < .05 / 52, "Yes", "No") %>% as.factor(),
corrected_p = p * 52,
size = df /100
)
res$size
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = size)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
rank_data <- wins_participant_wave %>%
group_by(participant, wave) %>%
mutate(
rank = dense_rank(desc(wins))
) %>%
dplyr::select(
participant, wave, item, rank
) %>%
pivot_wider(
names_from = wave,
names_prefix = "wave_",
values_from = rank
)
res = matrix(nrow = 0, ncol = 6) %>% as.data.frame()
colnames(res) = c("item", "cor","df", "p", "lower_ci", "upper_ci")
for (i in 1:52){
a = rank_data %>% filter(item == paste("i", i, sep = ""))
r = cor.test(a$wave_1, a$wave_2)
res <- res %>%
add_row(
item = i,
df = r$parameter[[1]],
cor = r$estimate,
p = r$p.value,
lower_ci = r$conf.int[1],
upper_ci = r$conf.int[2]
)
}
# look at results
# mean test-retest reliability
mean_cor = res$cor %>% mean()
sd_cor = res$cor %>% sd()
# any item for which there was no significant relationship?
# after correcting for multiple comparisons.
res <- res %>%
mutate(
sig = ifelse(p < .05 / 52, "Yes", "No") %>% as.factor(),
corrected_p = p * 52,
size = df /100
)
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = size)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = df)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction")
theme_minimal()
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = df)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction",
size = "Degrees of freedom\nover:")
theme_minimal()
plot_trt
# get a nice plot
plot_trt <- ggplot(data = res) +
geom_point(aes(x = item, y = cor, color = sig, size = df)) +
geom_errorbar(aes(x = item, ymin = lower_ci, ymax = upper_ci), color = "black") +
geom_hline(aes(yintercept = 0)) +
geom_hline(aes(yintercept = mean_cor), color = "gray") +
xlab("Item") +
ylab("Pearson's r") +
ggtitle("Test-retest rank correlation") +
labs(color = "Significant after\nBonferroni-Correction",
size = "Degrees of \n freedom exceed:")
theme_minimal()
plot_trt
min_df = res$df %>% min()
max_df = res$df %>% max()
min_df
max_df
mean_df = res$df %>% mean()
sd_df = res$df %>% sd()
min_df = res$df %>% min()
max_df = res$df %>% max()
mean_df
sd_df
min_df
maximum
max_df
name
names
dat
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
)
dat_rt
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
pivot_wider(
names_from(wave),
names_prefix("log_rt_w"),
values_from(log_rt)
)ä
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
pivot_wider(
names_from(wave),
names_prefix("log_rt_w"),
values_from(log_rt)
)
?pivot_wider
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
ungroup() %>%
pivot_wider(
names_from(wave),
names_prefix("log_rt_w"),
values_from(log_rt)
)
rlang::last_trace()
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
ungroup() %>%
pivot_wider(
names_from = wave,
names_prefix ="log_rt_w",
values_fr
om = log_rt)
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
ungroup() %>%
pivot_wider(
names_from = wave,
names_prefix ="log_rt_w",
values_from = log_rt
)
dat_rt
dat_entropy
# Storage hygiene
rm(list=setdiff(ls(), c("dat", "dat_filter", "dat_demo", "inv_logit", "core_items", "names")))
#  exclusions, see above
exclusions <- c(4, 8, 113, 94)
# load file
res_entropy <- readRDS(paste(getwd(), "/entropy_observed.rds", sep = "")) %>%
select(participant, wave, entropy_score) %>%
pivot_wider(
names_from = wave,
values_from = entropy_score,
names_prefix = "entropy_w"
)
# adjust participant ID
# join entropy and data into one file
dat_entropy <- merge(dat_demo, res_entropy) %>%
mutate(
CESD_w1 = scale(CESD_w1),
CESD_w2 = scale(CESD_w2),
entropy_w1 = scale(entropy_w1),
entropy_w2 = scale(entropy_w2),
sex = ifelse(sex == "m", 1, 0),
age_w1 = scale(age_w1),
age_w2 = scale(age_w2)
)
# Now, have a look at whether there are any potential outliers.
plot(dat_entropy$CESD_w2, dat_entropy$age_w2)
plot(dat_entropy$CESD_w1, dat_entropy$age_w1)
plot(dat_entropy$CESD_w1, dat_entropy$entropy_w1)
plot(dat_entropy$CESD_w2, dat_entropy$entropy_w2)
# looks like in both waves we occasionally get quite unusual entropy scores.
# Deal with outliers by excluding entropy scores +/- 3 SD from mean
before = nrow(dat_entropy)
dat_entropy <- dat_entropy %>%
dplyr::filter(entropy_w1 > -3 & entropy_w1 < 3 &
entropy_w2 > -3 & entropy_w2 < 3
)
after = nrow(dat_entropy)
# how many participants were kicked?
before - after
# test-retest of entropy score
plot(dat_entropy$entropy_w1, dat_entropy$entropy_w2)
cor.test(dat_entropy$entropy_w1, dat_entropy$entropy_w2)
# examine the possibility that larger entropy scores result from more items in the trial
items_in_competition <- readRDS(paste(getwd(), "/contest_distribution.rds", sep = "")) %>%
select(participant, sum, wave) %>%
pivot_wider(names_from = wave, values_from = sum, names_prefix = "competitions_w")
dat_entropy <- merge(dat_entropy, items_in_competition)
# get a correlation matrix for the both timepoints
cor_w1 <- dat_entropy %>%
filter(!participant %in% exclusions) %>%
select(sex, age_w1, CESD_w1, entropy_w1, competitions_w1) %>%
cor_mat()
cor_w1
cor_w1 %>% cor_get_pval()
# get CIs for report
cor.test(dat_entropy$entropy_w1, dat_entropy$age_w1)
# looks like age and depression but not sex are significantly associated with entropy score
cor_w2 <- dat_entropy %>%
filter(!participant %in% exclusions) %>%
select(sex, age_w2, CESD_w2, entropy_w2, competitions_w2) %>%
cor_mat()
cor_w2
cor_w2 %>% cor_get_pval()
cor.test(dat_entropy$entropy_w2, dat_entropy$age_w2)
# again, age $ depression, but not sex are associated with entropy score.
# age and depression were associated in our sample, such that higher depression was more common among younger participants.
# However, the correlation was small (-0.2), so no need to worry about colinearity
# now, run a linear model, first at time 1, starting with the strongest predictor - age.
model_decision_w1 <- lm(formula = entropy_w1 ~ 0 + CESD_w1 + age_w1 + age_w1 * CESD_w1, data = dat_entropy)
# and time 2
model_decision_w2 <- lm(formula = entropy_w2 ~  0 + CESD_w2+ age_w2 + age_w2 * CESD_w2, data = dat_entropy)
plot(dat_entropy$entropy_w1, dat_entropy$competitions_w1)
cor.test(dat_entropy$entropy_w1, dat_entropy$competitions_w1)
plot(dat_entropy$entropy_w2, dat_entropy$competitions_w2)
cor.test(dat_entropy$entropy_w2, dat_entropy$competitions_w2)
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
ungroup() %>%
pivot_wider(
names_from = wave,
names_prefix ="log_rt_w",
values_from = log_rt
)
dat_entropy
d <- merge(dat_entropy, dat_rt)
d
dat_rt <- dat %>%
group_by(wave, participant) %>%
summarise(
log_rt =  mean(log_rt)
) %>%
ungroup() %>%
pivot_wider(
names_from = wave,
names_prefix ="log_rt_w",
values_from = log_rt
)
dat_entropy <- merge(dat_entropy, dat_rt)
cor.test(dat_entropy$entropy_w1, dat_entropy$log_rt_w1)
cor.test(dat_entropy$entropy_w2, dat_entropy$log_rt_w2)
plot(dat_entropy$entropy_w1, dat_entropy$log_rt_w1)
plot(dat_entropy$entropy_w2, dat_entropy$log_rt_w2)
